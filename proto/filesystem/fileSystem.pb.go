// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: fileSystem.proto

package filesystem

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Mensajes para operaciones del sistema de archivos
type UploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Directory     string                 `protobuf:"bytes,2,opt,name=directory,proto3" json:"directory,omitempty"` // Puede estar vac√≠o
	Content       []byte                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	ContentBase64 string                 `protobuf:"bytes,4,opt,name=contentBase64,proto3" json:"contentBase64,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	mi := &file_fileSystem_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileSystem_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_fileSystem_proto_rawDescGZIP(), []int{0}
}

func (x *UploadRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadRequest) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

func (x *UploadRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *UploadRequest) GetContentBase64() string {
	if x != nil {
		return x.ContentBase64
	}
	return ""
}

type DirectoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DirectoryRequest) Reset() {
	*x = DirectoryRequest{}
	mi := &file_fileSystem_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryRequest) ProtoMessage() {}

func (x *DirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileSystem_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryRequest.ProtoReflect.Descriptor instead.
func (*DirectoryRequest) Descriptor() ([]byte, []int) {
	return file_fileSystem_proto_rawDescGZIP(), []int{1}
}

func (x *DirectoryRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type SubdirectoryRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ParentDirectory  string                 `protobuf:"bytes,1,opt,name=parent_directory,json=parentDirectory,proto3" json:"parent_directory,omitempty"`
	SubdirectoryName string                 `protobuf:"bytes,2,opt,name=subdirectory_name,json=subdirectoryName,proto3" json:"subdirectory_name,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SubdirectoryRequest) Reset() {
	*x = SubdirectoryRequest{}
	mi := &file_fileSystem_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubdirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubdirectoryRequest) ProtoMessage() {}

func (x *SubdirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileSystem_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubdirectoryRequest.ProtoReflect.Descriptor instead.
func (*SubdirectoryRequest) Descriptor() ([]byte, []int) {
	return file_fileSystem_proto_rawDescGZIP(), []int{2}
}

func (x *SubdirectoryRequest) GetParentDirectory() string {
	if x != nil {
		return x.ParentDirectory
	}
	return ""
}

func (x *SubdirectoryRequest) GetSubdirectoryName() string {
	if x != nil {
		return x.SubdirectoryName
	}
	return ""
}

type RenameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OldName       string                 `protobuf:"bytes,1,opt,name=old_name,json=oldName,proto3" json:"old_name,omitempty"`
	NewName       string                 `protobuf:"bytes,2,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenameRequest) Reset() {
	*x = RenameRequest{}
	mi := &file_fileSystem_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameRequest) ProtoMessage() {}

func (x *RenameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileSystem_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameRequest.ProtoReflect.Descriptor instead.
func (*RenameRequest) Descriptor() ([]byte, []int) {
	return file_fileSystem_proto_rawDescGZIP(), []int{3}
}

func (x *RenameRequest) GetOldName() string {
	if x != nil {
		return x.OldName
	}
	return ""
}

func (x *RenameRequest) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_fileSystem_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileSystem_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_fileSystem_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type MoveRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SourcePath      string                 `protobuf:"bytes,1,opt,name=source_path,json=sourcePath,proto3" json:"source_path,omitempty"`
	DestinationPath string                 `protobuf:"bytes,2,opt,name=destination_path,json=destinationPath,proto3" json:"destination_path,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MoveRequest) Reset() {
	*x = MoveRequest{}
	mi := &file_fileSystem_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveRequest) ProtoMessage() {}

func (x *MoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileSystem_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveRequest.ProtoReflect.Descriptor instead.
func (*MoveRequest) Descriptor() ([]byte, []int) {
	return file_fileSystem_proto_rawDescGZIP(), []int{5}
}

func (x *MoveRequest) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *MoveRequest) GetDestinationPath() string {
	if x != nil {
		return x.DestinationPath
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	FilePath      string                 `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	FileName      string                 `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileSize      int64                  `protobuf:"varint,4,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	FileType      string                 `protobuf:"bytes,5,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	NodeId        string                 `protobuf:"bytes,6,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_fileSystem_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_fileSystem_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_fileSystem_proto_rawDescGZIP(), []int{6}
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Response) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *Response) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *Response) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *Response) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *Response) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type ListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []string               `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_fileSystem_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fileSystem_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_fileSystem_proto_rawDescGZIP(), []int{7}
}

func (x *ListResponse) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

type ListAllResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []string               `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Directories   []string               `protobuf:"bytes,2,rep,name=directories,proto3" json:"directories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAllResponse) Reset() {
	*x = ListAllResponse{}
	mi := &file_fileSystem_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllResponse) ProtoMessage() {}

func (x *ListAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fileSystem_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllResponse.ProtoReflect.Descriptor instead.
func (*ListAllResponse) Descriptor() ([]byte, []int) {
	return file_fileSystem_proto_rawDescGZIP(), []int{8}
}

func (x *ListAllResponse) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *ListAllResponse) GetDirectories() []string {
	if x != nil {
		return x.Directories
	}
	return nil
}

type NodeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	mi := &file_fileSystem_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fileSystem_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_fileSystem_proto_rawDescGZIP(), []int{9}
}

func (x *NodeInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NodeInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type NodeStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeStatus) Reset() {
	*x = NodeStatus{}
	mi := &file_fileSystem_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatus) ProtoMessage() {}

func (x *NodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_fileSystem_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatus.ProtoReflect.Descriptor instead.
func (*NodeStatus) Descriptor() ([]byte, []int) {
	return file_fileSystem_proto_rawDescGZIP(), []int{10}
}

func (x *NodeStatus) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NodeStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_fileSystem_proto protoreflect.FileDescriptor

const file_fileSystem_proto_rawDesc = "" +
	"\n" +
	"\x10fileSystem.proto\x12\n" +
	"filesystem\"\x89\x01\n" +
	"\rUploadRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x1c\n" +
	"\tdirectory\x18\x02 \x01(\tR\tdirectory\x12\x18\n" +
	"\acontent\x18\x03 \x01(\fR\acontent\x12$\n" +
	"\rcontentBase64\x18\x04 \x01(\tR\rcontentBase64\"&\n" +
	"\x10DirectoryRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"m\n" +
	"\x13SubdirectoryRequest\x12)\n" +
	"\x10parent_directory\x18\x01 \x01(\tR\x0fparentDirectory\x12+\n" +
	"\x11subdirectory_name\x18\x02 \x01(\tR\x10subdirectoryName\"E\n" +
	"\rRenameRequest\x12\x19\n" +
	"\bold_name\x18\x01 \x01(\tR\aoldName\x12\x19\n" +
	"\bnew_name\x18\x02 \x01(\tR\anewName\"#\n" +
	"\rDeleteRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"Y\n" +
	"\vMoveRequest\x12\x1f\n" +
	"\vsource_path\x18\x01 \x01(\tR\n" +
	"sourcePath\x12)\n" +
	"\x10destination_path\x18\x02 \x01(\tR\x0fdestinationPath\"\xb0\x01\n" +
	"\bResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x1b\n" +
	"\tfile_path\x18\x02 \x01(\tR\bfilePath\x12\x1b\n" +
	"\tfile_name\x18\x03 \x01(\tR\bfileName\x12\x1b\n" +
	"\tfile_size\x18\x04 \x01(\x03R\bfileSize\x12\x1b\n" +
	"\tfile_type\x18\x05 \x01(\tR\bfileType\x12\x16\n" +
	"\x06nodeId\x18\x06 \x01(\tR\x06nodeId\"$\n" +
	"\fListResponse\x12\x14\n" +
	"\x05files\x18\x01 \x03(\tR\x05files\"I\n" +
	"\x0fListAllResponse\x12\x14\n" +
	"\x05files\x18\x01 \x03(\tR\x05files\x12 \n" +
	"\vdirectories\x18\x02 \x03(\tR\vdirectories\"<\n" +
	"\bNodeInfo\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\">\n" +
	"\n" +
	"NodeStatus\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status2\xaa\x04\n" +
	"\x11FileSystemService\x12=\n" +
	"\n" +
	"UploadFile\x12\x19.filesystem.UploadRequest\x1a\x14.filesystem.Response\x12E\n" +
	"\x0fCreateDirectory\x12\x1c.filesystem.DirectoryRequest\x1a\x14.filesystem.Response\x12K\n" +
	"\x12CreateSubdirectory\x12\x1f.filesystem.SubdirectoryRequest\x1a\x14.filesystem.Response\x12=\n" +
	"\n" +
	"RenameFile\x12\x19.filesystem.RenameRequest\x1a\x14.filesystem.Response\x12=\n" +
	"\n" +
	"DeleteFile\x12\x19.filesystem.DeleteRequest\x1a\x14.filesystem.Response\x12C\n" +
	"\tListFiles\x12\x1c.filesystem.DirectoryRequest\x1a\x18.filesystem.ListResponse\x129\n" +
	"\bMoveFile\x12\x17.filesystem.MoveRequest\x1a\x14.filesystem.Response\x12D\n" +
	"\aListAll\x12\x1c.filesystem.DirectoryRequest\x1a\x1b.filesystem.ListAllResponse2\x87\x01\n" +
	"\vNodeService\x12:\n" +
	"\fRegisterNode\x12\x14.filesystem.NodeInfo\x1a\x14.filesystem.Response\x12<\n" +
	"\fReportStatus\x12\x16.filesystem.NodeStatus\x1a\x14.filesystem.ResponseB\x12Z\x10proto/filesystemb\x06proto3"

var (
	file_fileSystem_proto_rawDescOnce sync.Once
	file_fileSystem_proto_rawDescData []byte
)

func file_fileSystem_proto_rawDescGZIP() []byte {
	file_fileSystem_proto_rawDescOnce.Do(func() {
		file_fileSystem_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fileSystem_proto_rawDesc), len(file_fileSystem_proto_rawDesc)))
	})
	return file_fileSystem_proto_rawDescData
}

var file_fileSystem_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_fileSystem_proto_goTypes = []any{
	(*UploadRequest)(nil),       // 0: filesystem.UploadRequest
	(*DirectoryRequest)(nil),    // 1: filesystem.DirectoryRequest
	(*SubdirectoryRequest)(nil), // 2: filesystem.SubdirectoryRequest
	(*RenameRequest)(nil),       // 3: filesystem.RenameRequest
	(*DeleteRequest)(nil),       // 4: filesystem.DeleteRequest
	(*MoveRequest)(nil),         // 5: filesystem.MoveRequest
	(*Response)(nil),            // 6: filesystem.Response
	(*ListResponse)(nil),        // 7: filesystem.ListResponse
	(*ListAllResponse)(nil),     // 8: filesystem.ListAllResponse
	(*NodeInfo)(nil),            // 9: filesystem.NodeInfo
	(*NodeStatus)(nil),          // 10: filesystem.NodeStatus
}
var file_fileSystem_proto_depIdxs = []int32{
	0,  // 0: filesystem.FileSystemService.UploadFile:input_type -> filesystem.UploadRequest
	1,  // 1: filesystem.FileSystemService.CreateDirectory:input_type -> filesystem.DirectoryRequest
	2,  // 2: filesystem.FileSystemService.CreateSubdirectory:input_type -> filesystem.SubdirectoryRequest
	3,  // 3: filesystem.FileSystemService.RenameFile:input_type -> filesystem.RenameRequest
	4,  // 4: filesystem.FileSystemService.DeleteFile:input_type -> filesystem.DeleteRequest
	1,  // 5: filesystem.FileSystemService.ListFiles:input_type -> filesystem.DirectoryRequest
	5,  // 6: filesystem.FileSystemService.MoveFile:input_type -> filesystem.MoveRequest
	1,  // 7: filesystem.FileSystemService.ListAll:input_type -> filesystem.DirectoryRequest
	9,  // 8: filesystem.NodeService.RegisterNode:input_type -> filesystem.NodeInfo
	10, // 9: filesystem.NodeService.ReportStatus:input_type -> filesystem.NodeStatus
	6,  // 10: filesystem.FileSystemService.UploadFile:output_type -> filesystem.Response
	6,  // 11: filesystem.FileSystemService.CreateDirectory:output_type -> filesystem.Response
	6,  // 12: filesystem.FileSystemService.CreateSubdirectory:output_type -> filesystem.Response
	6,  // 13: filesystem.FileSystemService.RenameFile:output_type -> filesystem.Response
	6,  // 14: filesystem.FileSystemService.DeleteFile:output_type -> filesystem.Response
	7,  // 15: filesystem.FileSystemService.ListFiles:output_type -> filesystem.ListResponse
	6,  // 16: filesystem.FileSystemService.MoveFile:output_type -> filesystem.Response
	8,  // 17: filesystem.FileSystemService.ListAll:output_type -> filesystem.ListAllResponse
	6,  // 18: filesystem.NodeService.RegisterNode:output_type -> filesystem.Response
	6,  // 19: filesystem.NodeService.ReportStatus:output_type -> filesystem.Response
	10, // [10:20] is the sub-list for method output_type
	0,  // [0:10] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_fileSystem_proto_init() }
func file_fileSystem_proto_init() {
	if File_fileSystem_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fileSystem_proto_rawDesc), len(file_fileSystem_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_fileSystem_proto_goTypes,
		DependencyIndexes: file_fileSystem_proto_depIdxs,
		MessageInfos:      file_fileSystem_proto_msgTypes,
	}.Build()
	File_fileSystem_proto = out.File
	file_fileSystem_proto_goTypes = nil
	file_fileSystem_proto_depIdxs = nil
}
